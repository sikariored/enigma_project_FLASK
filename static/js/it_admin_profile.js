document.addEventListener("DOMContentLoaded", function() {
    // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–æ–∫ –ë–∏—Ç—Ä–∏–∫—Å24 –∏ –ü–æ—á—Ç–∞
    var bitrix24Button = document.getElementById('bitrix24-button');
    var emailButton = document.getElementById('email-button');

    function setResourceValue(value) {
        var resourceField = document.getElementById('resource');
        resourceField.value = value;
    }

    bitrix24Button.addEventListener('click', function() {
        setResourceValue('–ë–∏—Ç—Ä–∏–∫—Å24');
    });

    emailButton.addEventListener('click', function() {
        setResourceValue('Email');
    });

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
    function generatePassword(length) {
        const charset = "abcdefghjkmnopqrstuvwxyzABCDEFGHJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+=-]+$";
        let password = "";

        for (let i = 0; i < length; i++) {
            const randomIndex = Math.floor(Math.random() * charset.length);
            password += charset.charAt(randomIndex);
        }

        return password;
    }

    var passwordField = document.getElementById('password');
    var generatePasswordButton = document.getElementById('generate-password-button');

    generatePasswordButton.addEventListener('click', function() {
        var generatedPassword = generatePassword(18); // –ò–∑–º–µ–Ω–∏—Ç–µ –¥–ª–∏–Ω—É –ø–∞—Ä–æ–ª—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        passwordField.value = generatedPassword;

        // –ü–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª—è –≤—ã–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ input
        var event = new Event('input', {
            bubbles: true,
            cancelable: true,
        });
        passwordField.dispatchEvent(event);
    });

    // –í–∏–¥–∏–º–æ—Å—Ç—å –∑–∞–≤–æ–¥–∏–º–æ–≥–æ –ø–∞—Ä–æ–ª—è
    var showPasswordButton = document.getElementById('show-password-button');
    var isPasswordVisible = false;

    showPasswordButton.addEventListener('click', function() {
        isPasswordVisible = !isPasswordVisible;
        passwordField.type = isPasswordVisible ? 'text' : 'password';
    });

    // –ö–Ω–æ–ø–∫–∞ "–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å" –≤ —Ç–∞–±–ª–∏—Ü–µ
    const copyButtons = document.querySelectorAll('.copy-password-button');

    copyButtons.forEach(function (button) {
        button.addEventListener('click', function () {
            const index = Array.from(copyButtons).indexOf(button);

            if (index !== -1) {
                const passwordToCopy = passwords[index];

                const tempInput = document.createElement('input');
                tempInput.value = passwordToCopy;
                document.body.appendChild(tempInput);
                tempInput.select();
                document.execCommand('copy');
                document.body.removeChild(tempInput);
            }
        });
    });

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è
    // SELECT
    var filterUsernameSelect = document.getElementById('filter-username-select');
    var tableRows = document.querySelectorAll('#table-users-info tbody tr');

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–º–µ–Ω –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
    function getUniqueUsernames() {
        var uniqueUsernames = new Set();
        tableRows.forEach(function(row) {
            var usernameCell = row.querySelector('td[data-filter="username"]').textContent;
            uniqueUsernames.add(usernameCell);
        });
        return Array.from(uniqueUsernames);
    }

    // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏
    var uniqueUsernames = getUniqueUsernames();
    uniqueUsernames.forEach(function(username) {
        var option = document.createElement('option');
        option.value = username;
        option.textContent = username;
        filterUsernameSelect.appendChild(option);
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤—ã–±–æ—Ä–∞ –≤ —Å–ø–∏—Å–∫–µ
    filterUsernameSelect.addEventListener('change', function() {
        var selectedUsername = filterUsernameSelect.value.toLowerCase();

        tableRows.forEach(function(row) {
            var usernameCell = row.querySelector('td[data-filter="username"]').textContent.toLowerCase();

            if (selectedUsername === '' || usernameCell === selectedUsername) {
                row.style.display = 'table-row';
            } else {
                row.style.display = 'none';
            }
        });
    });

    // INPUT
    var filterUsernameInput = document.getElementById('filter-username-input');

    filterUsernameInput.addEventListener('input', function() {
        var filterValue = filterUsernameInput.value.toLowerCase();

        tableRows.forEach(function(row) {
            var usernameCell = row.querySelector('td[data-filter="username"]').textContent.toLowerCase();

            if (usernameCell.includes(filterValue)) {
                row.style.display = 'table-row';
            } else {
                row.style.display = 'none';
            }
        });
    });

    //input username in add user
    $("#username").select2({
        ajax: {
            url: "/get_suggestions",
            dataType: "json",
            delay: 250,
            data: function(params) {
                return {
                    q: params.term
                };
            },
            processResults: function(data) {
                return {
                    results: data.results
                };
            },
            cache: true
        },
        minimumInputLength: 0,
        placeholder: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', // –î–æ–±–∞–≤–∏–º –ø–æ–¥—Å–∫–∞–∑–∫—É –¥–ª—è –ø—É—Å—Ç–æ–≥–æ –ø–æ–ª—è
        allowClear: true, // –†–∞–∑—Ä–µ—à–∏–º –æ—á–∏—â–µ–Ω–∏–µ –ø–æ–ª—è
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è select2:select
    $("#username").on("select2:select", function (e) {
        var selectedData = e.params.data;
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        $("#username").val(selectedData.text).trigger("change.select2");
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è select2:unselect (–æ—á–∏—â–µ–Ω–∏–µ –ø–æ–ª—è)
    $("#username").on("select2:unselect", function (e) {
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        $("#username").val("").trigger("change");
    });


    //–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–ª—ã –ø–∞—Ä–æ–ª—è


    // –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    var passwordField = document.getElementById('password');
    var passwordStrength = document.getElementById('password-strength');

    passwordStrength.textContent = "üü•";
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è
    passwordField.addEventListener('input', function() {
        var password = passwordField.value;
        var strength = calculatePasswordStrength(password);

        // –í–∏–∑—É–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª—è
        if (strength >= 60) {
            passwordStrength.textContent = "‚úÖ"; //strong
            // passwordStrength.style.color = "green";
        } else if (strength >= 30) {
            passwordStrength.textContent = "üü®"; //medium
            // passwordStrength.style.color = "orange";
        } else {
            passwordStrength.textContent = "üü•"; //weak
            // passwordStrength.style.color = "red";
        }
    });

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª—è
    function calculatePasswordStrength(password) {
        var length = password.length;
        var hasUppercase = /[A-Z]/.test(password);
        var hasLowercase = /[a-z]/.test(password);
        var hasNumbers = /\d/.test(password);
        var hasSpecialChars = /[!@#$%^&*()_+=-]/.test(password);
    
        // –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∏–ª—ã –ø–∞—Ä–æ–ª—è
        var strength = 0;
    
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –ø–∞—Ä–æ–ª—è
        if (length >= 8) {
            strength += 10;
        } else if (length >= 12) {
            strength += 20;
        }
    
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –±—É–∫–≤ –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ö
        if (hasUppercase && hasLowercase) {
            strength += 20;
        }
    
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ü–∏—Ñ—Ä
        if (hasNumbers) {
            strength += 15;
        }
    
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
        if (hasSpecialChars) {
            strength += 15;
        }
    
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:
        // –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª—è –∑–¥–µ—Å—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ (12345, qwerty –∏ —Ç. –¥.).
    
        return strength;
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    // –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–∞—Ä–æ–ª—å –±–µ–∑–æ–ø–∞—Å–µ–Ω (–≥–æ—Ä–∏—Ç –∑–µ–ª—ë–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç)
    var add_user_password_form = document.getElementById('add_user_password_form');
    var passwordField = document.getElementById('password');


    add_user_password_form.addEventListener('submit', function(event) {
        var strength = calculatePasswordStrength(passwordField.value);

        if (strength < 60) {
            event.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
            alert('–ü–∞—Ä–æ–ª—å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–¥–µ–∂–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å.');
        }
    });
});
